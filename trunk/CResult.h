// Class automatically generated by Dev-C++ New Class wizard

#ifndef CRESULT_H
#define CRESULT_H
#include <wx/string.h>
#include "CPunch.h"
#include <list>
#include <map>
#include "CXmlWriter.h"
class CCourse;
class CLegStat;

// Objects of this class represent a single result - the start, finish,
// SI number, splits and any data that is provided by user-interaction
class CResult
{
	public:
		// class constructor
		CResult(wxString& a_RawData);
		// class destructor
		~CResult();
		
        static bool ValidData(wxString& a_Data);
        CPunch GetClear() {return m_Clear;};
        CPunch GetCheck() {return m_Check;};        
        CPunch GetStart() {return m_Start;};          
        CPunch GetFinish() {return m_Finish;};            
        wxString GetRawData() {return m_RawData;};
        long GetSINumber() {return m_SINumber;};
        long GetRawIndex() {return m_RawIndex;};
        wxString GetDisplayName();
        wxString GetName() {return m_Name;};        
        void SetName(wxString a_Name) {m_Name = a_Name;};
        void SetCourse(CCourse* a_Course) {m_Course = a_Course;};
        bool GetFinished();
        void SetFinished(bool a_Finished) {m_Finished = a_Finished;};        
        void SetFinishedOverride(bool a_Finished);
        void PunchedControls(std::list<CPunch>& a_Controls, bool a_IncludeStartFinish);
        wxString RawDataDisplayStr();
        wxString TextResultStr();        
        wxString TextElapsedStr();         
        wxString TextLegStr();    
        wxString TextLegBehindStr();                              
        wxTimeSpan LegTime(long a_Leg);
        void SetPos(long a_Pos) {m_Pos = a_Pos;}
        long GetPos() {return m_Pos;};
        bool GetInvalid() {return m_Invalid;};
        void ClearValidPunches();
        void AddLegStat(CLegStat* a_LegStat);
        void ClearLegStats();
        CLegStat* GetLegStat(int a_Leg);
        CCourse* GetCourse() {return m_Course;};
        wxTimeSpan TimeTaken();
        void AddXML(CXmlWriter& a_Writer);
        
		wxString DebugStr();        
        
    private:
        void DoTimeSanityCheck();
        void ProcessResult();
        CResult(const CResult& a_Copy);  // hide copy constructor
        CResult(); // hide default constructor
        wxString PersonID();
        wxString ClubID();
               
        wxString m_RawData;
        bool m_ProcessedResult;
        bool m_Invalid;
        bool m_Finished;
        long m_Pos;        
        bool m_FinishedOverride;
        bool m_FinishedOverrideSet;
        CCourse* m_Course;

                
        long m_SINumber;
        long m_RawIndex; 
        wxString m_Name;
        wxString m_Club; 
        
        CPunch m_Clear; 
        CPunch m_Check;
        CPunch m_Start;
        CPunch m_Finish;  
        
        std::list<CPunch*> m_Punches;
        std::map<int, CLegStat*> m_LegStats; 
              
};

#endif // CRESULT_H
