// Class automatically generated by Dev-C++ New Class wizard

#include "cxmlwriter.h" // class's header file
#include "utils.h"
#include <wx/textfile.h>
#include <wx/tokenzr.h>

// class constructor
CXmlWriter::CXmlWriter(wxString a_DocType, wxString a_DtdName): m_GotValue(false)
{
	m_Output = _T("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>");
	m_Output += _T("\n<!DOCTYPE ") + a_DocType + 
                _T(" SYSTEM ") + '"' + a_DtdName + "\">";
    m_GotValue = true;
}

// class destructor
CXmlWriter::~CXmlWriter()
{
	// insert your code here
}

void CXmlWriter::StartElement(wxString  a_ElementName, wxString a_Attributes)
{
    if (!m_GotValue)
        m_Output += ">";
        
    m_Elements.push(a_ElementName);
    m_Output += _T("\n<") + a_ElementName;        
    if (!a_Attributes.IsEmpty())
        m_Output += _T(" ") + a_Attributes;
    m_GotValue = false;
    m_LastElement = a_ElementName;
}

void CXmlWriter::EndElement()
{
if (m_Elements.size() < 1)
    return;
    
if (m_GotValue == false && m_LastElement == m_Elements.top())
    m_Output += _T("/>");
else
    m_Output += "</" + m_Elements.top() + ">";

m_Elements.pop();    
m_GotValue = true;
}
		
void CXmlWriter::AddValue(wxString a_Value)
{
    if (!m_GotValue)
        m_Output += ">";    
    m_GotValue = true;
    m_Output += a_Value;
}

bool CXmlWriter::WriteToFile(wxString a_File)
{
    wxTextFile tfile(a_File);
    if (tfile.Exists())
        {
        tfile.Clear();
        tfile.Write();
        if (!tfile.Open(a_File))
            {
            SIMessageBox("Unable to open file " + a_File + " to write XML.");    
            return false;
            }
        }
    else
        if (!tfile.Create(a_File))
            {
            SIMessageBox("Unable to create file " + a_File + " to write XML.");    
            return false;
            }

    // break m_Output by \n token and write to file line-wise   
    wxStringTokenizer lines(m_Output, wxT("\n"));   
    while (lines.HasMoreTokens()) 
        tfile.AddLine(lines.GetNextToken());
    tfile.Write();   
    return true;   
}
